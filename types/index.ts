interface User {
  id: number,
  email?: string,
  chosenLanguage: string,
  password?: string,
  salt?: string,
  token?: string,
  isAdmin: boolean,
  eventLinks: EventUser[],
  availabilities: Availability[],
}

interface Event {
  id: number,
  name: string,
  title?: string,
  slug?: string,
  logo?: string,
  icon?: string,
  theme?: string,
  homepage?: string,
  backlinkText?: string,
  godfatherInfoLink?: string,
  isListingOpen: boolean,
  showIsMotorized: boolean,
  showIsReserve: boolean,
  showFideid: boolean,
  registerShowDates: boolean,
  isFree: boolean,
  sendMailOnRegister: boolean,
  hasGodfather: boolean,
  isOpen: boolean,
  hasEnded: boolean,
  userLinks: EventUser[],
  dates: Date[],
}

interface Date {
  id: number,
  date: Date,
  title?: string,
  comment?: string,
  isLocked: boolean,
  position: number,
  event: Event,
  eventId: number,
  availabilities: Availability[],
  groups: Group[],
}

interface Availability {
  id: number,
  isAvailable: boolean,
  date: Date,
  dateId: number,
  user: User,
  userId: number,
}

interface EventUser {
  id: number,
  position: number,
  alias: string,
  password: string,
  fideid?: string,
  phone?: string,
  godfather?: string,
  note?: string,
  elo?: string,
  club?: string,
  nationality?: string,
  hasPaid: boolean,
  paymentNote?: string,
  isMotorized?: boolean,
  isReserve?: boolean,
  isValidated: boolean,
  isPasswordSent: boolean,
  isHidden: boolean,
  isAdmin: boolean,
  isOwner: boolean,
  token?: string,
  event: Event,
  eventId: number,
  user: User,
  userId: number,
  groupUsers: GroupUser[],
}

interface Group {
  id: number,
  name?: string,
  color?: string,
  isAtHome: boolean,
  isValidated: boolean,
  address?: string,
  versus?: string,
  position: number,
  date: Date,
  dateId: number,
  groupUsers: GroupUser[],
}

interface GroupUser {
  id: number,
  position: number,
  isConfirmed: boolean,
  group: Group,
  groupId: number,
  userLink: EventUser,
  userLinkId: number,
}
